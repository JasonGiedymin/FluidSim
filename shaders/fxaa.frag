precision mediump float;varying vec2 v_coordinates;uniform sampler2D u_input;uniform vec2 u_resolution;const float a=8.0;const float b=1.0/8.0;const float c=1.0/128.0;void main(){vec2 d=1.0/u_resolution;vec3 e=texture2D(u_input,v_coordinates+vec2(-1.0,-1.0)*d).rgb;vec3 f=texture2D(u_input,v_coordinates+vec2(1.0,-1.0)*d).rgb;vec3 g=texture2D(u_input,v_coordinates+vec2(-1.0,1.0)*d).rgb;vec3 h=texture2D(u_input,v_coordinates+vec2(1.0,1.0)*d).rgb;vec3 i=texture2D(u_input,v_coordinates).rgb;vec3 j=vec3(0.299,0.587,0.114);float k=dot(e,j);float l=dot(f,j);float m=dot(g,j);float n=dot(h,j);float o=dot(i,j);float p=min(o,min(min(k,l),min(m,n)));float q=max(o,max(max(k,l),max(m,n)));vec2 r=vec2(-((k+l)-(m+n)),((k+m)-(l+n)));float s=max((k+l+m+n)*(0.25*b),c);float t=1.0/(min(abs(r.x),abs(r.y))+s);r=min(vec2(a),max(vec2(-a),r*t))*d.xy;vec3 u=0.5*(texture2D(u_input,v_coordinates.xy+r*(1.0/3.0-0.5)).xyz+texture2D(u_input,v_coordinates.xy+r*(2.0/3.0-0.5)).xyz);vec3 v=u*0.5+0.25*(texture2D(u_input,v_coordinates.xy+r*-0.5).xyz+texture2D(u_input,v_coordinates.xy+r*0.5).xyz);float w=dot(v,j);if(w<p||w>q){gl_FragColor=vec4(u,1.0);}else{gl_FragColor=vec4(v,1.0);}}