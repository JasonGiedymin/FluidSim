precision mediump float;vec3 a(vec3 b){return vec3(mod(gl_FragCoord.x,b.x),gl_FragCoord.y,floor(gl_FragCoord.x/b.x)+0.5);}vec4 c(sampler2D d,vec3 e,vec3 b){vec3 f=e*b;f=clamp(f,vec3(0.5),vec3(b-0.5));float g=floor(f.z-0.5);float h=g+1.0;float i=fract(f.z-0.5);vec2 j=vec2(g*b.x+f.x,f.y)/vec2(b.x*b.z,b.y);vec2 k=vec2(h*b.x+f.x,f.y)/vec2(b.x*b.z,b.y);return mix(texture2D(d,j),texture2D(d,k),i);}vec4 l(sampler2D d,vec3 e,vec3 b){vec3 f=e*b;f=clamp(f,vec3(0.5),vec3(b-0.5));float m=floor(f.z);vec2 n=vec2(m*b.x+f.x,f.y)/vec2(b.x*b.z,b.y);return texture2D(d,n);}varying vec3 v_position;varying vec3 v_velocity;uniform vec3 u_gridResolution;varying float v_zIndex;uniform int u_accumulate;float o(float p){if(p>=0.0&&p<=1.0){return 1.0-p;}else if(p>=-1.0&&p<=0.0){return 1.0+p;}else{return 0.0;}}float q(vec3 r){return o(r.x)*o(r.y)*o(r.z);}void main(){vec3 s=floor(a(u_gridResolution+1.0));if(s.z==v_zIndex){vec3 t=vec3(s.x,s.y+0.5,s.z+0.5);float u=q(v_position-t);vec3 v=vec3(s.x+0.5,s.y,s.z+0.5);float w=q(v_position-v);vec3 x=vec3(s.x+0.5,s.y+0.5,s.z);float y=q(v_position-x);vec3 z=vec3(s.x+0.5,s.y+0.5,s.z+0.5);float A=q(v_position-z);if(u_accumulate==0){gl_FragColor=vec4(u,w,y,A);}else if(u_accumulate==1){gl_FragColor=vec4(u*v_velocity.x,w*v_velocity.y,y*v_velocity.z,0.0);}}else{gl_FragColor=vec4(0.0,0.0,0.0,0.0);}}